param (
  [string] $ReportTypes = "Cobertura"
)

$codeCoverage = "$env:USERPROFILE\.nuget\packages\microsoft.codecoverage\16.7.1\build\netstandard1.0\CodeCoverage\CodeCoverage.exe"
$reportGenerator = "dotnet $env:USERPROFILE\.nuget\packages\reportgenerator\4.6.7\tools\netcoreapp3.0\ReportGenerator.dll"
$testResultsDir = "..\src\SharpCode.Test\TestResults"
$outputDir = "..\coverage"

function AsSingleLine {
  param ([string] $text)
  # Remove line breaks, normalize excess spacing and trim
  (($text -replace "\r?\n", "") -replace "\s+", " ").Trim()
}

function RunCmd {
  param ([string] $command)
  AsSingleLine $command | Invoke-Expression
}

$coverageFiles = Get-ChildItem $testResultsDir -Filter "*.coverage" -Recurse | Select-Object FullName

if ($coverageFiles.Length -eq 0) {
  Write-Host "Could not find coverage report generated by dotnet test" -ForegroundColor DarkRed
  Get-ChildItem $testResultsDir | Write-Host
  exit 1
}

$coverageFile = $coverageFiles[0].FullName

RunCmd @"
  $codeCoverage analyze
    /output:$outputDir/coverage.xml
    $coverageFile
"@

RunCmd @"
  $reportGenerator
    "-reports:$outputDir/coverage.xml"
    "-reporttypes:$ReportTypes"
    "-targetdir:$outputDir"
    "-classfilters:+SharpCode.*;-SharpCode.Test*"
"@
